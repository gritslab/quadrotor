/**
 * @file quad.cpp
 * @author Rowland O'Flaherty
 * @date 11/12/2014
 */

//------------------------------------------------------------------------------
// Includes
//------------------------------------------------------------------------------
#include "quad.h"


//------------------------------------------------------------------------------
// Namespaces
//------------------------------------------------------------------------------
using namespace std;

//------------------------------------------------------------------------------
// Global Variables
//------------------------------------------------------------------------------


//==============================================================================
// Quad Class
//==============================================================================
//------------------------------------------------------------------------------
// Constructors and Destructors
//------------------------------------------------------------------------------
Quad::Quad()
// :
{
    for(int i=0; i<FINITE_STATE_DIM; ++i) {
        finite_state[i] = 0;
    }
}

// Quad::~Quad()
// {

// }

//--------------------------------------------------------------------------
// Public Member Getters and Setters
//--------------------------------------------------------------------------


//------------------------------------------------------------------------------
// Public Methods
//------------------------------------------------------------------------------
int Quad::toggle_arm()
{
    if (finite_state[FLIGHT_STATE] == GROUNDED) {
        if (finite_state[ARM_STATE] == DISARMED) {
            // TODO: send request
            finite_state[ARM_STATE] == ARMED;
        } else {
            // TODO: send request
            finite_state[ARM_STATE] == DISARMED;
        }
    } else {
        // TODO: send warning that quad is not in a state to toggle ARM_STATE
        return 1;
    }
    return 0;
}

int Quad::takeoff()
{
    // TODO
}

int Quad::land()
{
    // TODO
}

int Quad::run()
{
    // TODO
}

int Quad::fly_to()
{
    // TODO
}

//------------------------------------------------------------------------------
// Private Methods
//------------------------------------------------------------------------------

